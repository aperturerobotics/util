// Code generated by protoc-gen-go-lite. DO NOT EDIT.
// source: github.com/aperturerobotics/util/filter/filter.proto

package filter

// StringFilter matches the value of a string against a set of rules.
// All of the non-zero rules must match for the filter to match.
// An empty filter matches any.
type StringFilter struct {
	unknownFields []byte
	// Empty matches the value against the empty value.
	Empty bool `protobuf:"varint,1,opt,name=empty,proto3" json:"empty,omitempty"`
	// NotEmpty matches the value against a not-empty value.
	NotEmpty bool `protobuf:"varint,2,opt,name=not_empty,json=notEmpty,proto3" json:"not_empty,omitempty"`
	// Value matches an exact value.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Values matches one or more exact values.
	// If any of the values match, this field is considered matched.
	Values []string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	// Re matches the value against a regular expression.
	Re string `protobuf:"bytes,5,opt,name=re,proto3" json:"re,omitempty"`
	// HasPrefix checks if the value has the given prefix.
	HasPrefix string `protobuf:"bytes,6,opt,name=has_prefix,json=hasPrefix,proto3" json:"has_prefix,omitempty"`
	// HasSuffix checks if the value has the given suffix.
	HasSuffix string `protobuf:"bytes,7,opt,name=has_suffix,json=hasSuffix,proto3" json:"has_suffix,omitempty"`
	// Contains checks if the value contains the given value.
	Contains string `protobuf:"bytes,8,opt,name=contains,proto3" json:"contains,omitempty"`
}

func (x *StringFilter) Reset() {
	*x = StringFilter{}
}

func (*StringFilter) ProtoMessage() {}

func (x *StringFilter) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

func (x *StringFilter) GetNotEmpty() bool {
	if x != nil {
		return x.NotEmpty
	}
	return false
}

func (x *StringFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringFilter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *StringFilter) GetRe() string {
	if x != nil {
		return x.Re
	}
	return ""
}

func (x *StringFilter) GetHasPrefix() string {
	if x != nil {
		return x.HasPrefix
	}
	return ""
}

func (x *StringFilter) GetHasSuffix() string {
	if x != nil {
		return x.HasSuffix
	}
	return ""
}

func (x *StringFilter) GetContains() string {
	if x != nil {
		return x.Contains
	}
	return ""
}
