// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0-devel
// 	protoc        v4.25.3
// source: github.com/aperturerobotics/util/filter/filter.proto

package filter

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StringFilter matches the value of a string against a set of rules.
// All of the non-zero rules must match for the filter to match.
// An empty filter matches any.
type StringFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Empty matches the value against the empty value.
	Empty bool `protobuf:"varint,1,opt,name=empty,proto3" json:"empty,omitempty"`
	// NotEmpty matches the value against a not-empty value.
	NotEmpty bool `protobuf:"varint,2,opt,name=not_empty,json=notEmpty,proto3" json:"not_empty,omitempty"`
	// Value matches an exact value.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Values matches one or more exact values.
	// If any of the values match, this field is considered matched.
	Values []string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	// Re matches the value against a regular expression.
	Re string `protobuf:"bytes,5,opt,name=re,proto3" json:"re,omitempty"`
	// HasPrefix checks if the value has the given prefix.
	HasPrefix string `protobuf:"bytes,6,opt,name=has_prefix,json=hasPrefix,proto3" json:"has_prefix,omitempty"`
	// HasSuffix checks if the value has the given suffix.
	HasSuffix string `protobuf:"bytes,7,opt,name=has_suffix,json=hasSuffix,proto3" json:"has_suffix,omitempty"`
	// Contains checks if the value contains the given value.
	Contains string `protobuf:"bytes,8,opt,name=contains,proto3" json:"contains,omitempty"`
}

func (x *StringFilter) Reset() {
	*x = StringFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_aperturerobotics_util_filter_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringFilter) ProtoMessage() {}

func (x *StringFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aperturerobotics_util_filter_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringFilter.ProtoReflect.Descriptor instead.
func (*StringFilter) Descriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_util_filter_filter_proto_rawDescGZIP(), []int{0}
}

func (x *StringFilter) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

func (x *StringFilter) GetNotEmpty() bool {
	if x != nil {
		return x.NotEmpty
	}
	return false
}

func (x *StringFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringFilter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *StringFilter) GetRe() string {
	if x != nil {
		return x.Re
	}
	return ""
}

func (x *StringFilter) GetHasPrefix() string {
	if x != nil {
		return x.HasPrefix
	}
	return ""
}

func (x *StringFilter) GetHasSuffix() string {
	if x != nil {
		return x.HasSuffix
	}
	return ""
}

func (x *StringFilter) GetContains() string {
	if x != nil {
		return x.Contains
	}
	return ""
}

var File_github_com_aperturerobotics_util_filter_filter_proto protoreflect.FileDescriptor

var file_github_com_aperturerobotics_util_filter_filter_proto_rawDesc = []byte{
	0x0a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd9,
	0x01, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x73, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_github_com_aperturerobotics_util_filter_filter_proto_rawDescOnce sync.Once
	file_github_com_aperturerobotics_util_filter_filter_proto_rawDescData = file_github_com_aperturerobotics_util_filter_filter_proto_rawDesc
)

func file_github_com_aperturerobotics_util_filter_filter_proto_rawDescGZIP() []byte {
	file_github_com_aperturerobotics_util_filter_filter_proto_rawDescOnce.Do(func() {
		file_github_com_aperturerobotics_util_filter_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_aperturerobotics_util_filter_filter_proto_rawDescData)
	})
	return file_github_com_aperturerobotics_util_filter_filter_proto_rawDescData
}

var file_github_com_aperturerobotics_util_filter_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_aperturerobotics_util_filter_filter_proto_goTypes = []interface{}{
	(*StringFilter)(nil), // 0: filter.StringFilter
}
var file_github_com_aperturerobotics_util_filter_filter_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_aperturerobotics_util_filter_filter_proto_init() }
func file_github_com_aperturerobotics_util_filter_filter_proto_init() {
	if File_github_com_aperturerobotics_util_filter_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_aperturerobotics_util_filter_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_aperturerobotics_util_filter_filter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_aperturerobotics_util_filter_filter_proto_goTypes,
		DependencyIndexes: file_github_com_aperturerobotics_util_filter_filter_proto_depIdxs,
		MessageInfos:      file_github_com_aperturerobotics_util_filter_filter_proto_msgTypes,
	}.Build()
	File_github_com_aperturerobotics_util_filter_filter_proto = out.File
	file_github_com_aperturerobotics_util_filter_filter_proto_rawDesc = nil
	file_github_com_aperturerobotics_util_filter_filter_proto_goTypes = nil
	file_github_com_aperturerobotics_util_filter_filter_proto_depIdxs = nil
}
